version: '2.2'

services:
  es:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.1.3
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - ${ELASTIC_PORT}:9200
      - 9300:9300
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail -u ${ELASTIC_USERNAME}:${ELASTIC_PASSWORD} http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
  
  es-setup:
    image: appropriate/curl
    depends_on:
      es:
        condition: service_healthy
    command: >
      /bin/sh -c "
      until curl --output /dev/null --silent --head --fail -u elastic:${ELASTIC_PASSWORD} http://es:9200; do
          echo 'Waiting for Elasticsearch...';
          sleep 5;
      done;
      curl -X POST -u elastic:${ELASTIC_PASSWORD} 'http://es:9200/_security/role/kibana_user_role' -H 'Content-Type: application/json' -d'
      {
        \"cluster\": [\"all\"],
        \"indices\": [
          {
            \"names\": [\"*\",\"admin-*\",\".kibana*\"],
            \"privileges\": [\"all\"],
            \"allow_restricted_indices\": true
          }
        ],
        \"applications\": [
          {
            \"application\": \"kibana-.kibana\",
            \"privileges\": [\"all\"],
            \"resources\": [\"*\"]
          }
        ]
      }';
      curl -X POST -u elastic:${ELASTIC_PASSWORD} 'http://es:9200/_security/user/${KIBANA_USERNAME}' -H 'Content-Type: application/json' -d'
      {
        \"password\" : \"${KIBANA_PASSWORD}\",
        \"roles\" : [\"kibana_user_role\"],
        \"full_name\" : \"Kibana User\",
        \"email\" : \"kibana_user@example.com\",
        \"enabled\": true
      }';
      "
  kibana:
    image: docker.elastic.co/kibana/kibana:8.1.3
    ports:
      - ${KIBANA_PORT}:5601
    environment:
      - ELASTICSEARCH_HOSTS=http://es:9200
      - ELASTICSEARCH_USERNAME=${KIBANA_USERNAME}
      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
    depends_on:
      es:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
    ports:
      - ${FRONTEND_PORT}:8080
    environment:
      - API_BASE_URL=http://backend:8081
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
    ports:
      - 8081:8081
    environment:
      - SPRING_ELASTICSEARCH_URIS=http://es:9200
      - SPRING_ELASTICSEARCH_USERNAME=${ELASTIC_USERNAME}
      - SPRING_ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}
      - API_KEYS=${API_KEYS}
    depends_on:
      es:
        condition: service_healthy

volumes:
  esdata:
    driver: local
  kibanadata:
    driver: local
